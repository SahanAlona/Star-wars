{"version":3,"sources":["components/Navbar/Navbar.js","services/service.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Navbar","props","classActive","isActive","type","onClick","className","name","BASE_IMAGES_URL","fetchDataByCategoryName","category","url","axios","get","then","response","data","Main","state","count","handlerOnClick","bind","this","setState","prev","posts","length","ev","target","src","post","img","alt","onError","e","addDefaultSrc","Object","keys","content","map","key","Component","App","getPeople","loading","people","activePage","arrPosts","results","i","gender","birth_year","eye_color","id","dataToRender","catch","error","getPlanets","planets","rotation_period","orbital_period","diameter","getStarShips","starShips","model","consumables","crew","handleClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c8942f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar(props) {\r\n    const classActive = props.isActive ? 'active' : '';\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            onClick={() => props.onClick()}\r\n            className={`nav-button ${classActive}`}>\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nconst BASE_DATA_URL = 'https://swapi.dev/api/';\r\nexport const BASE_IMAGES_URL = 'https://starwars-visualguide.com/assets/img/';\r\n\r\nexport function fetchDataByCategoryName(category) {\r\n    const url = BASE_DATA_URL + category;\r\n\r\n    return axios.get(url).then((response) => response.data);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BASE_IMAGES_URL } from '../../services/service';\r\nimport './Main.css';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n        };\r\n        this.handlerOnClick = this.handlerOnClick.bind(this);\r\n    }\r\n\r\n    handlerOnClick() {\r\n        this.setState((prev) => {\r\n            const nextCount = prev.count < this.props.posts.length - 1 ? prev.count + 1 : 0;\r\n            return {\r\n                count: nextCount,\r\n            };\r\n        });\r\n    }\r\n\r\n    addDefaultSrc(ev) {\r\n        ev.target.src = `${BASE_IMAGES_URL}big-placeholder.jpg`;\r\n    }\r\n\r\n    render() {\r\n        const posts = this.props.posts;\r\n        const i = this.state.count;\r\n        const post = posts[i];\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <button type=\"button\" className=\"main-button\" onClick={this.handlerOnClick}>\r\n                    NEXT\r\n                </button>\r\n                <div className=\"main-header\">\r\n                    <img\r\n                        src={post.img}\r\n                        alt={post.name}\r\n                        onError={(e) => this.addDefaultSrc(e)}\r\n                        className=\"main-img\"\r\n                    />\r\n                    <h3 className=\"main-title\">{post.name}</h3>\r\n                </div>\r\n                <ul className=\"main-list\">\r\n                    {Object.keys(post.content).map((key) => (\r\n                        <li key={key} className=\"card-panel\">\r\n                            {key}: {post.content[key]}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './../Navbar/Navbar';\nimport Main from './../Main/Main';\nimport { BASE_IMAGES_URL, fetchDataByCategoryName } from '../../services/service';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            error: false,\n            people: [],\n            planets: [],\n            starShips: [],\n            activePage: 'people',\n        };\n    }\n\n    componentDidMount() {\n        this.getPeople();\n    }\n\n    getPeople = () => {\n        this.setState({\n            loading: this.state.people.length === 0,\n            activePage: 'people',\n        });\n\n        fetchDataByCategoryName('people')\n            .then((response) => {\n                const arrPosts = response.results.map((post, i) => {\n                    const { name, gender, birth_year, eye_color } = post;\n                    const id = i + 1;\n                    return {\n                        id,\n                        name,\n                        img: `${`${BASE_IMAGES_URL}characters/${id}`}.jpg`,\n                        content: { gender, birth_year, eye_color },\n                    };\n                });\n                this.setState({\n                    loading: false,\n                    people: arrPosts,\n                    dataToRender: arrPosts,\n                });\n            })\n            .catch(() =>\n                this.setState({\n                    error: true,\n                })\n            );\n    };\n\n    getPlanets = () => {\n        this.setState({\n            loading: this.state.planets.length === 0,\n            activePage: 'planets',\n        });\n\n        fetchDataByCategoryName('planets')\n            .then((response) => {\n                const arrPosts = response.results.map((post, i) => {\n                    const { name, rotation_period, orbital_period, diameter } = post;\n                    const id = i + 1;\n                    return {\n                        id,\n                        name,\n                        img: `${`${BASE_IMAGES_URL}planets/${id}`}.jpg`,\n                        content: { rotation_period, orbital_period, diameter },\n                    };\n                });\n                this.setState({\n                    loading: false,\n                    planets: arrPosts,\n                });\n            })\n            .catch(() =>\n                this.setState({\n                    error: true,\n                })\n            );\n    };\n\n    getStarShips = () => {\n        this.setState({\n            loading: this.state.starShips.length === 0,\n            activePage: 'starShips',\n        });\n\n        fetchDataByCategoryName('starships')\n            .then((response) => {\n                const arrPosts = response.results.map((post, i) => {\n                    const { name, model, consumables, crew } = post;\n                    const id = i + 1;\n                    return {\n                        id,\n                        name,\n                        img: `${`${BASE_IMAGES_URL}starships/${id}`}.jpg`,\n                        content: { model, consumables, crew },\n                    };\n                });\n                this.setState({\n                    loading: false,\n                    starShips: arrPosts,\n                });\n            })\n            .catch(() =>\n                this.setState({\n                    error: true,\n                })\n            );\n    };\n\n    handleClick(activePage) {\n        this.setState({ activePage });\n        switch (activePage) {\n            case 'people':\n                this.getPeople();\n                break;\n            case 'planets':\n                this.getPlanets();\n                break;\n            default:\n                this.getStarShips();\n        }\n    }\n\n    render() {\n        const { loading, error } = this.state;\n        const activePage = this.state.activePage;\n        const data = this.state[activePage];\n\n        if (loading) return <p>loading...</p>;\n        if (error) return <p>error =( </p>;\n\n        return (\n            <div className=\"app-wrapper\">\n                <nav className=\"nav\">\n                    <Navbar\n                        name=\"people\"\n                        isActive={activePage === 'people'}\n                        onClick={() => this.handleClick('people')}\n                    />\n                    <Navbar\n                        name=\"planets\"\n                        isActive={activePage === 'planets'}\n                        onClick={() => this.handleClick('planets')}\n                    />\n                    <Navbar\n                        name=\"starShips\"\n                        isActive={activePage === 'starShips'}\n                        onClick={() => this.handleClick('starShips')}\n                    />\n                </nav>\n\n                <Main posts={data} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}